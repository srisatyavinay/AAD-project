//DFS
DFS(G,v)   ( v is the vertex where the search starts )
    Stack S := {};   ( start with an empty stack )
    for each vertex u, set visited[u] := false;
    push S, v;
    while (S is not empty) do
        u := pop S;
        for each unvisited neighbour w of u
            if (not visited[w]) then
                push S, w;
            end if
        end for
    end while
end DFS()

//BFS
BFS(G,s)
    Queue Q := {};
    for each vertex u, set visited[s] := false;
    end for
    enqueue Q, s;
    while (Q is not empty) do
        u := dequeue Q;
        for each v adjacent to u do
            if (not visited[v]) then
                enqueue Q, v;
            end if
        end for
    end while
end BFS(G, s)
